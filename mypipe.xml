<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.9">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.23">
    <script>def foo = &apos;bar&apos;
println foo

node {
    stage &apos;git&apos;
    git &apos;https://github.com/craigwongva/lime.git&apos;

    stage &apos;build&apos;
    def x1 = &quot;/var/lib/jenkins/jobs/mypipe/workspace/build-grails-mypipe&quot;
    def x1text = x1.execute().text
    println &quot;@1&quot;
    println x1text
    
    stage &apos;cf login&apos;
    withCredentials([usernameColonPassword(credentialsId: &apos;12345&apos;, variable: &apos;USERPASS&apos;)]) {
        //println &quot;${env.JOB_NAME} is where its at, $USERPASS is a nice visit&quot;
        def userpasssplit = USERPASS.split(&apos;:&apos;)
        def user = userpasssplit[0]
        def pwd = userpasssplit[1]

        def cfcmd = &quot;/cf&quot;
        def cftarget = &quot;https://api.devops.geointservices.io&quot;
        def cfskip = &quot;--skip-ssl-validation&quot;
        def cforg = &quot;piazza&quot;
        def cfspace = &quot;int&quot;
        def cmd = &quot;$cfcmd login -a $cftarget -u $user -p $pwd -o $cforg -s $cfspace $cfskip&quot;
        def cmdtext = cmd.execute().text
        println &quot;@2&quot;
        println cmdtext    
    }
    
    stage &apos;cf push&apos;
    def cfcmd = &quot;/cf&quot;    
    def appname = &quot;banno&quot;    
    def jobsdir = &quot;/var/lib/jenkins/jobs&quot;
    def targetdir = &quot;mypipe/workspace/target&quot;
    def war = &quot;blue-0.1.war&quot;
    def cmd2 = &quot;$cfcmd push $appname -p $jobsdir/$targetdir/$war&quot;
    def cmdtext2 = cmd2.execute().text
    println &quot;@3&quot;
    println cmdtext2
    
    stage &apos;push to nexus&apos;
    def mickey = [
      &quot;curl&quot;,
      &quot;--user&quot;, 
      &quot;admin:admin123&quot;, 
      &quot;--upload-file&quot;, 
      &quot;/var/lib/jenkins/jobs/mypipe/workspace/target/blue-0.1.war&quot;, 
      &quot;http://localhost:8079/repository/myrawrepo/blue-0.1.war&quot;].execute().text
    println &quot;@4&quot;
    println mickey

    stage &apos;sonar&apos;
    def cmd3 = &quot;/var/lib/jenkins/jobs/mypipe/workspace/run-sonar&quot;
    //I am Jenkins running from /
    def cmdtext3 = cmd3.execute().text
    println &quot;@4&quot;
    println cmdtext3

    stage &apos;examine project&apos;
    def x4 = &apos;cat /tmp/run-1300&apos;.execute() | [&apos;grep&apos;, &apos;EXECUTION SUCCESS&apos;].execute()
    x4.waitFor()
    if (x4.text.size() == 0) {    
        &apos;intentionally-fail-this-jenkins-job&apos;.execute()
    }
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
</flow-definition>